<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
							  	 http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
								 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
								 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
								 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
								 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<context:component-scan base-package="com.softz.office" />
	<context:property-placeholder
		properties-ref="config" />
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven validator="validator" />

	<beans:bean id="springApplicationContext"
		class="com.softz.office.std.common.service.bean.SpringApplicationContext" />
	<beans:bean
		class="com.softz.office.std.common.error.resolver.OfficeExceptionResolver" />
	<beans:bean id="filterMultipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
	<beans:bean id="contentNegotiatingViewResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="order" value="1" />
		<beans:property name="contentNegotiationManager">
			<beans:bean
				class="org.springframework.web.accept.ContentNegotiationManager">
				<beans:constructor-arg>
					<beans:bean
						class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<beans:constructor-arg>
							<beans:map>
								<beans:entry key="json" value="application/json" />
								<beans:entry key="html" value="application/json" />
								<beans:entry key="png" value="application/json" />
								<beans:entry key="jpg" value="application/json" />
								<beans:entry key="jpeg" value="application/json" />
								<beans:entry key="jpe" value="application/json" />
								<beans:entry key="gif" value="application/json" />
								<beans:entry key="bmp" value="application/json" />
								<beans:entry key="js" value="application/json" />
								<beans:entry key="css" value="application/json" />
							</beans:map>
						</beans:constructor-arg>
					</beans:bean>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
		<!-- Json -> Xml or xml -> Json -->
		<beans:property name="defaultViews">
			<beans:list>
				<!-- JSON View -->
				<beans:bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<!-- XML View -->
				<beans:bean
					class="org.springframework.web.servlet.view.xml.MarshallingView">
					<beans:property name="marshaller" ref="marshaller" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="localeResolver" class="com.softz.office.std.common.service.i18n.OfficeCookieLocaleResolver">
		<beans:property name="defaultLocaleLang" value="ko"/>
		<beans:property name="supportedLocale" value="en,ko,zh,ja"/>
	</beans:bean>		
	
	<!-- 마샬링할 대상 클래스 지정 -->
	<oxm:jaxb2-marshaller id="marshaller">
		<oxm:class-to-be-bound
			name="com.softz.office.std.common.response.ResponseHeaderVO" />
		<oxm:class-to-be-bound
			name="com.softz.office.std.common.response.ResponseBodyVO" />
		<oxm:class-to-be-bound
			name="com.softz.office.std.common.response.ResponseVO" />
		<oxm:class-to-be-bound
			name="com.softz.office.std.common.response.ErrorResponseBodyVO" />
		<oxm:class-to-be-bound
			name="com.softz.office.std.common.response.ErrorResponseVO" />
	</oxm:jaxb2-marshaller>
	<!-- 트랜젝션 설정 : 클래스 기반의 프록시 설정, Default나 false인 경우 Java Proxy의 인터페이스 기반의 
		프록시 설정으로 세팅된다. -->
	<tx:annotation-driven proxy-target-class="true" />
	<!-- 트렌젝션 AOP Advice 설정 -->
	<tx:advice id="transactionAdvicer" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="create*" propagation="REQUIRED"
				rollback-for="Throwable" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Throwable" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="Throwable" />
		</tx:attributes>
	</tx:advice>

	<!-- AOP 사용 설정 -->
	<aop:aspectj-autoproxy />

	<!-- Transaction AOP 설정 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut
			expression="execution(* com.softz.office.srv.api..*ServiceImpl.*(..))"
			id="requiredTransaction" />
		<aop:advisor advice-ref="transactionAdvicer" pointcut-ref="requiredTransaction" />
	</aop:config>
	<!-- Interceptor 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean id="localeChangeInterceptor"
				class="com.softz.office.std.common.service.i18n.OfficeLocaleChangeInterceptor">
				<beans:property name="paramName" value="lang" />
			</beans:bean>
		</interceptor>
	</interceptors>
</beans:beans>								 